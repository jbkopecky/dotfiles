#! /bin/bash
# fzf (https://github.com/junegunn/fzf)
# ------------------------------------------------------------------------------
#

# General                                                                    {{{
export FZF_DEFAULT_OPTS='
--color fg:8,bg:0,hl:1,fg+:7,bg+:0,hl+:1
--color info:8,prompt:7,spinner:1,pointer:1,marker:1
'
export FZF_CTRL_T_OPTS="--preview 'preview_file {} | head -200'"
export FZF_CTRL_R_OPTS="--preview 'echo {}' --preview-window down:3:hidden --bind '?:toggle-preview' --bind 'ctrl-y:execute(echo -n {2..} | pbcopy)' --header 'Press CTRL-Y to copy command into clipboard'"
command -v blsd > /dev/null && export FZF_ALT_C_COMMAND='blsd'
command -v tree > /dev/null && export FZF_ALT_C_OPTS="--preview 'tree -C {} | head -200'"

fzf-down() {
  fzf --height 50% "$@"
}

is_in_git_repo() {
  git rev-parse HEAD > /dev/null 2>&1
}

# }}}

# fe - Open the selected file with the default editor                        {{{
#    - Bypass fuzzy finder if there's only one match (--select-1)
#    - Exit if there's no match (--exit-0)

fe() {
  local file
  file=$(fzf-tmux --preview "cat {}" --query="$1" --select-1 --exit-0)
  [ -n "$file" ] && ${EDITOR:-vim} "$file"
}
# }}}

# fd - cd to selected drectory                                               {{{
fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf-tmux) &&
  cd "$dir"
}
# }}}

# fda - including hidden directories                                         {{{
fda() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf-tmux) && cd "$dir"
}
# }}}

# fkill - kill process                                                       {{{
fkill() {
   pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')

   if [ "x$pid" != "x" ]
   then
     kill -${1:-9} $pid
   fi
}
# }}}

# fshow - git commit browser                                                 {{{
fshow() {
  git log --graph --color=always \
      --format="%C(auto)%h%d %s %C(black)%C(bold)%cr" "$@" |
  fzf --ansi --no-sort --reverse --tiebreak=index --bind=ctrl-s:toggle-sort \
      --header "Press CTRL-S to toggle sort" \
      --preview "echo {} | grep -o '[a-f0-9]\{7\}' | head -1 |
                 xargs -I % sh -c 'git show --color=always % | head -200 '" \
      --bind "enter:execute:echo {} | grep -o '[a-f0-9]\{7\}' | head -1 |
              xargs -I % sh -c 'vim fugitive://\$(git rev-parse --show-toplevel)/.git//% < /dev/tty'"
}
# }}}

# gb - git branch                                                            {{{
gb() {
  is_in_git_repo || return
  git branch -a --color=always | grep -v '/HEAD\s' | sort |
  fzf-down --ansi --multi --tac --preview-window right:70% \
    --preview 'git log --oneline --graph --date=short --pretty="format:%C(auto)%cd %h%d %s" $(sed s/^..// <<< {} | cut -d" " -f1) | head -200' |
  sed 's/^..//' | cut -d' ' -f1 |
  sed 's#^remotes/##'
}
# }}}

# fco - Checkout local branch                                                {{{
fco() {
  local tags branches target
  tags=$(git tag | awk '{print "\x1b[31;1mtag\x1b[m\t" $1}') || return
  branches=$(
    git branch --all | grep -v HEAD             |
    sed "s/.* //"    | sed "s#remotes/[^/]*/##" |
    sort -u          | awk '{print "\x1b[34;1mbranch\x1b[m\t" $1}') || return
  target=$(
    (echo "$tags"; echo "$branches") | sed '/^$/d' |
    fzf-down --no-hscroll --reverse --ansi +m -d "\t" -n 2 -q "$*") || return
  git checkout $(echo "$target" | awk '{print $2}')
}
# }}}

# fbr - Checkout branch with preview                                         {{{
fbr() {
  git for-each-ref --count=30 --sort=-committerdate refs/heads/ --format="%(refname:short)" |
    fzf-tmux  --no-sort --reverse --tiebreak=index --no-multi \
       --ansi \
       --preview "git diff --color=always --stat {}"|
    xargs git checkout
}
# }}}

# fce - activate conda environment                                           {{{
fce() {
  local cenv=$(conda env list | grep envs | sort | fzf-tmux)

  if [[ $cenv ]]; then
    local env=$(echo $cenv | cut -f 1 -d " ")
    source activate $env
  fi
}
# }}}
